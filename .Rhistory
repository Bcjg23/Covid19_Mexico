# Usamos ggplotly para hacerlo interactivo
#p <- ggplotly(p)
ggsave(filename = paste0(path_img, "08_casos_acumulados_latam.png"),
width = 10, height = 8, dpi = 100)
# Paquetes utiles
library(ggplot2)
library(dplyr)
library(plotly)
library(hrbrthemes)
library(readr)
library(tidyverse)
library(lubridate)
#Variables auxiliares
path_img <-'~/github/Covid19_Mexico/imagenes/'
caption_text <- 'Fuente: Elaboración propia con datos de Data Repository by Johns Hopkins CSSE\n @Bcjg23 | @GutzCarlos | @czammar'
# Cargamos datos de serie de tiempo
# Fuente: 2019 Novel Coronavirus COVID-19 (2019-nCoV) Data Repository by Johns Hopkins CSSE
urlfile="https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"
df <-read_csv(url(urlfile))
# Datos para graficas
## Reordenamos los datos para las graficas
df <- df %>% select(-c(Lat,Long,`Province/State`)) %>% group_by(`Country/Region`) %>% summarise_all(funs(sum))
## Alargamos la tabla por Pais
df <-gather(df, `1/22/20`:`3/23/20`,key='Fecha',value=ConfirmedCases)
## Renombramos columna
df <- rename(df, Country=`Country/Region` )
## Transformamos la columna al formato de fecha adecuado
df <- df %>% mutate( date = as.Date(df$Fecha, format = "%m/%d/%Y"))
df$Date <-  mdy(df$Fecha)
## Paises para del comparativo
df <- df %>% filter(Country %in% c("Mexico","Colombia","Chile","Argentina","Brazil","Peru","Ecuador"))
## Filtro de fechas
df <- df %>% filter(Fecha>='2020-02-15')
## Etiquetas para el final de las series de tiempo
d_ends <- df %>% group_by(Country) %>% top_n(1, ConfirmedCases) %>% pull(ConfirmedCases)
##
fecha_actualizacion <- str_sub(max(df$ConfirmedCases), end = -1)
#
ggplot(df, aes(x = Date, y = ConfirmedCases,color = Country)) +
geom_line(size = 1,alpha=0.4) +
geom_point(size = 1)+
#scale_y_continuous(sec.axis = sec_axis(~ ., breaks = d_ends)) + # Coloca numero de casos totales al final de la serie (lo quite por overplotting)
theme_ipsum()  +
labs(title="Número de casos confirmados de COVID-19 en paises\n de LATAM por día",
subtitle=paste0("Total en estos paises: ", as.character(sum(df$ConfirmedCases)), "\nFecha de corte: ", df$Date[nrow(df)]),
caption=caption_text,
x="",
y="") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
plot.subtitle = element_text(hjust = 1, size =11 ),
plot.caption = element_text(size = 11),
strip.text = element_text(size = 14),
panel.spacing.x = unit(3, "lines"),
text = element_text(family = "Arial Narrow"),
axis.text.x = element_text(size = 12, angle = 90, hjust = 1),
axis.text.y = element_text(size = 12))
# Usamos ggplotly para hacerlo interactivo
#p <- ggplotly(p)
ggsave(filename = paste0(path_img, "08_casos_acumulados_latam.png"),
width = 10, height = 8, dpi = 100)
# Paquetes utiles
library(ggplot2)
library(dplyr)
library(plotly)
library(hrbrthemes)
library(readr)
library(tidyverse)
library(lubridate)
#Variables auxiliares
path_img <-'~/github/Covid19_Mexico/imagenes/'
caption_text <- 'Fuente: Elaboración propia con datos de Data Repository by Johns Hopkins CSSE\n @Bcjg23 | @GutzCarlos | @czammar'
# Cargamos datos de serie de tiempo
# Fuente: 2019 Novel Coronavirus COVID-19 (2019-nCoV) Data Repository by Johns Hopkins CSSE
urlfile="https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"
df <-read_csv(url(urlfile))
# Datos para graficas
## Reordenamos los datos para las graficas
df <- df %>% select(-c(Lat,Long,`Province/State`)) %>% group_by(`Country/Region`) %>% summarise_all(funs(sum))
## Alargamos la tabla por Pais
df <-gather(df, `1/22/20`:`3/23/20`,key='Fecha',value=ConfirmedCases)
## Renombramos columna
df <- rename(df, Country=`Country/Region` )
## Transformamos la columna al formato de fecha adecuado
df <- df %>% mutate( date = as.Date(df$Fecha, format = "%m/%d/%Y"))
df$Date <-  mdy(df$Fecha)
## Paises para del comparativo
df <- df %>% filter(Country %in% c("Mexico","Colombia","Chile","Argentina","Brazil","Peru","Ecuador"))
## Filtro de fechas
df <- df %>% filter(Fecha>='2020-03-15')
## Etiquetas para el final de las series de tiempo
d_ends <- df %>% group_by(Country) %>% top_n(1, ConfirmedCases) %>% pull(ConfirmedCases)
##
fecha_actualizacion <- str_sub(max(df$ConfirmedCases), end = -1)
#
ggplot(df, aes(x = Date, y = ConfirmedCases,color = Country)) +
geom_line(size = 1,alpha=0.4) +
geom_point(size = 1)+
#scale_y_continuous(sec.axis = sec_axis(~ ., breaks = d_ends)) + # Coloca numero de casos totales al final de la serie (lo quite por overplotting)
theme_ipsum()  +
labs(title="Número de casos confirmados de COVID-19 en paises\n de LATAM por día",
subtitle=paste0("Total en estos paises: ", as.character(sum(df$ConfirmedCases)), "\nFecha de corte: ", df$Date[nrow(df)]),
caption=caption_text,
x="",
y="") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
plot.subtitle = element_text(hjust = 1, size =11 ),
plot.caption = element_text(size = 11),
strip.text = element_text(size = 14),
panel.spacing.x = unit(3, "lines"),
text = element_text(family = "Arial Narrow"),
axis.text.x = element_text(size = 12, angle = 90, hjust = 1),
axis.text.y = element_text(size = 12))
# Usamos ggplotly para hacerlo interactivo
#p <- ggplotly(p)
ggsave(filename = paste0(path_img, "08_casos_acumulados_latam.png"),
width = 10, height = 8, dpi = 100)
# Paquetes utiles
library(ggplot2)
library(dplyr)
library(plotly)
library(hrbrthemes)
library(readr)
library(tidyverse)
library(lubridate)
#Variables auxiliares
path_img <-'~/github/Covid19_Mexico/imagenes/'
caption_text <- 'Fuente: Elaboración propia con datos de Data Repository by Johns Hopkins CSSE\n @Bcjg23 | @GutzCarlos | @czammar'
# Cargamos datos de serie de tiempo
# Fuente: 2019 Novel Coronavirus COVID-19 (2019-nCoV) Data Repository by Johns Hopkins CSSE
urlfile="https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"
df <-read_csv(url(urlfile))
# Datos para graficas
## Reordenamos los datos para las graficas
df <- df %>% select(-c(Lat,Long,`Province/State`)) %>% group_by(`Country/Region`) %>% summarise_all(funs(sum))
## Alargamos la tabla por Pais
df <-gather(df, `1/22/20`:`3/23/20`,key='Fecha',value=ConfirmedCases)
## Renombramos columna
df <- rename(df, Country=`Country/Region` )
## Transformamos la columna al formato de fecha adecuado
df <- df %>% mutate( date = as.Date(df$Fecha, format = "%m/%d/%Y"))
df$Date <-  mdy(df$Fecha)
## Paises para del comparativo
df <- df %>% filter(Country %in% c("Mexico","Colombia","Chile","Argentina","Brazil","Peru","Ecuador"))
## Filtro de fechas
df <- df %>% filter(Fecha>='2020-03-15')
## Etiquetas para el final de las series de tiempo
d_ends <- df %>% group_by(Country) %>% top_n(1, ConfirmedCases) %>% pull(ConfirmedCases)
##
fecha_actualizacion <- str_sub(max(df$ConfirmedCases), end = -1)
#
ggplot(df, aes(x = Date, y = ConfirmedCases,color = Country)) +
geom_line(size = 1,alpha=0.4) +
geom_point(size = 1)+
#scale_y_continuous(sec.axis = sec_axis(~ ., breaks = d_ends)) + # Coloca numero de casos totales al final de la serie (lo quite por overplotting)
theme_ipsum()  +
labs(title="Número de casos confirmados de COVID-19 en paises\n de LATAM por día",
subtitle=paste0("Total en estos paises: ", as.character(sum(df$ConfirmedCases)), "\nFecha de corte: ", df$Date[nrow(df)]),
caption=caption_text,
x="",
y="") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
plot.subtitle = element_text(hjust = 1, size =11 ),
plot.caption = element_text(size = 11),
strip.text = element_text(size = 14),
panel.spacing.x = unit(3, "lines"),
text = element_text(family = "Arial Narrow"),
axis.text.x = element_text(size = 12, angle = 90, hjust = 1),
axis.text.y = element_text(size = 12))
# Usamos ggplotly para hacerlo interactivo
#p <- ggplotly(p)
ggsave(filename = paste0(path_img, "08_casos_acumulados_latam.png"),
width = 10, height = 8, dpi = 100)
# Paquetes utiles
library(ggplot2)
library(dplyr)
library(plotly)
library(hrbrthemes)
library(readr)
library(tidyverse)
library(lubridate)
#Variables auxiliares
path_img <-'~/github/Covid19_Mexico/imagenes/'
caption_text <- 'Fuente: Elaboración propia con datos de Data Repository by Johns Hopkins CSSE\n @Bcjg23 | @GutzCarlos | @czammar'
# Cargamos datos de serie de tiempo
# Fuente: 2019 Novel Coronavirus COVID-19 (2019-nCoV) Data Repository by Johns Hopkins CSSE
urlfile="https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"
df <-read_csv(url(urlfile))
# Datos para graficas
## Reordenamos los datos para las graficas
df <- df %>% select(-c(Lat,Long,`Province/State`)) %>% group_by(`Country/Region`) %>% summarise_all(funs(sum))
## Alargamos la tabla por Pais
df <-gather(df, `1/22/20`:`3/23/20`,key='Fecha',value=ConfirmedCases)
## Renombramos columna
df <- rename(df, Country=`Country/Region` )
## Transformamos la columna al formato de fecha adecuado
df <- df %>% mutate( date = as.Date(df$Fecha, format = "%m/%d/%Y"))
df$Date <-  mdy(df$Fecha)
## Paises para del comparativo
df <- df %>% filter(Country %in% c("Mexico","Colombia","Chile","Argentina","Brazil","Peru","Ecuador"))
## Filtro de fechas
df <- df %>% filter(Fecha>='2020-03-15')
## Etiquetas para el final de las series de tiempo
d_ends <- df %>% group_by(Country) %>% top_n(1, ConfirmedCases) %>% pull(ConfirmedCases)
##
fecha_actualizacion <- str_sub(max(df$ConfirmedCases), end = -1)
#
ggplot(df, aes(x = Date, y = ConfirmedCases,color = Country)) +
geom_line(size = 1,alpha=0.4) +
geom_point(size = 1)+
#scale_y_continuous(sec.axis = sec_axis(~ ., breaks = d_ends)) + # Coloca numero de casos totales al final de la serie (lo quite por overplotting)
theme_ipsum()  +
labs(title="Número de casos confirmados de COVID-19 en paises\n de LATAM por día",
subtitle=paste0("Total en estos paises: ", as.character(sum(df$ConfirmedCases)), "\nFecha de corte: ", df$Date[nrow(df)]),
caption=caption_text,
x="",
y="") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
plot.subtitle = element_text(hjust = 1, size =11 ),
plot.caption = element_text(size = 11),
strip.text = element_text(size = 14),
panel.spacing.x = unit(3, "lines"),
text = element_text(family = "Arial Narrow"),
axis.text.x = element_text(size = 12, angle = 90, hjust = 1),
axis.text.y = element_text(size = 12))
# Usamos ggplotly para hacerlo interactivo
#p <- ggplotly(p)
ggsave(filename = paste0(path_img, "08_casos_acumulados_latam.png"),
width = 10, height = 8, dpi = 100)
View(df)
# Paquetes utiles
library(ggplot2)
library(dplyr)
library(plotly)
library(hrbrthemes)
library(readr)
library(tidyverse)
library(lubridate)
#Variables auxiliares
path_img <-'~/github/Covid19_Mexico/imagenes/'
caption_text <- 'Fuente: Elaboración propia con datos de Data Repository by Johns Hopkins CSSE\n @Bcjg23 | @GutzCarlos | @czammar'
# Cargamos datos de serie de tiempo
# Fuente: 2019 Novel Coronavirus COVID-19 (2019-nCoV) Data Repository by Johns Hopkins CSSE
urlfile="https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"
df <-read_csv(url(urlfile))
View(df)
# Paquetes utiles
library(ggplot2)
library(dplyr)
library(plotly)
library(hrbrthemes)
library(readr)
library(tidyverse)
library(lubridate)
#Variables auxiliares
path_img <-'~/github/Covid19_Mexico/imagenes/'
caption_text <- 'Fuente: Elaboración propia con datos de Data Repository by Johns Hopkins CSSE\n @Bcjg23 | @GutzCarlos | @czammar'
# Cargamos datos de serie de tiempo
# Fuente: 2019 Novel Coronavirus COVID-19 (2019-nCoV) Data Repository by Johns Hopkins CSSE
urlfile="https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"
df <-read_csv(url(urlfile))
# Datos para graficas
## Reordenamos los datos para las graficas
df <- df %>% select(-c(Lat,Long,`Province/State`)) %>% group_by(`Country/Region`) %>% summarise_all(funs(sum))
## Alargamos la tabla por Pais
df <-gather(df, `1/22/20`:`3/23/20`,key='Fecha',value=ConfirmedCases)
## Renombramos columna
df <- rename(df, Country=`Country/Region` )
## Transformamos la columna al formato de fecha adecuado
df <- df %>% mutate( date = as.Date(df$Fecha, format = "%m/%d/%Y"))
df$Date <-  mdy(df$Fecha)
## Paises para del comparativo
df <- df %>% filter(Country %in% c("Mexico","Colombia","Chile","Argentina","Brazil","Peru","Ecuador"))
## Filtro de fechas
df <- df %>% filter(Fecha>='2020-03-15')
## Etiquetas para el final de las series de tiempo
d_ends <- df %>% group_by(Country) %>% top_n(1, ConfirmedCases) %>% pull(ConfirmedCases)
##
fecha_actualizacion <- str_sub(max(df$ConfirmedCases), end = -1)
#
ggplot(df, aes(x = Date, y = ConfirmedCases,color = Country)) +
geom_line(size = 1,alpha=0.4) +
geom_point(size = 1)+
#scale_y_continuous(sec.axis = sec_axis(~ ., breaks = d_ends)) + # Coloca numero de casos totales al final de la serie (lo quite por overplotting)
theme_ipsum()  +
labs(title="Número de casos confirmados de COVID-19 en paises\n de LATAM por día",
subtitle=paste0("Total en estos paises: ", as.character(sum(df$ConfirmedCases)), "\nFecha de corte: ", df$Date[nrow(df)]),
caption=caption_text,
x="",
y="") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
plot.subtitle = element_text(hjust = 1, size =11 ),
plot.caption = element_text(size = 11),
strip.text = element_text(size = 14),
panel.spacing.x = unit(3, "lines"),
text = element_text(family = "Arial Narrow"),
axis.text.x = element_text(size = 12, angle = 90, hjust = 1),
axis.text.y = element_text(size = 12))
# Usamos ggplotly para hacerlo interactivo
#p <- ggplotly(p)
ggsave(filename = paste0(path_img, "08_casos_acumulados_latam.png"),
width = 10, height = 8, dpi = 100)
View(df)
# Paquetes utiles
library(ggplot2)
library(dplyr)
library(plotly)
library(hrbrthemes)
library(readr)
library(tidyverse)
library(lubridate)
#Variables auxiliares
path_img <-'~/github/Covid19_Mexico/imagenes/'
caption_text <- 'Fuente: Elaboración propia con datos de Data Repository by Johns Hopkins CSSE\n @Bcjg23 | @GutzCarlos | @czammar'
# Cargamos datos de serie de tiempo
# Fuente: 2019 Novel Coronavirus COVID-19 (2019-nCoV) Data Repository by Johns Hopkins CSSE
urlfile="https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"
df <-read_csv(url(urlfile))
# Datos para graficas
## Reordenamos los datos para las graficas
df <- df %>% select(-c(Lat,Long,`Province/State`)) %>% group_by(`Country/Region`) %>% summarise_all(funs(sum))
## Alargamos la tabla por Pais
df <-gather(df, `1/22/20`:`3/25/20`,key='Fecha',value=ConfirmedCases)
## Renombramos columna
df <- rename(df, Country=`Country/Region` )
## Transformamos la columna al formato de fecha adecuado
df <- df %>% mutate( date = as.Date(df$Fecha, format = "%m/%d/%Y"))
df$Date <-  mdy(df$Fecha)
## Paises para del comparativo
df <- df %>% filter(Country %in% c("Mexico","Colombia","Chile","Argentina","Brazil","Peru","Ecuador"))
## Filtro de fechas
df <- df %>% filter(Fecha>='2020-03-15')
## Etiquetas para el final de las series de tiempo
d_ends <- df %>% group_by(Country) %>% top_n(1, ConfirmedCases) %>% pull(ConfirmedCases)
##
fecha_actualizacion <- str_sub(max(df$ConfirmedCases), end = -1)
#
ggplot(df, aes(x = Date, y = ConfirmedCases,color = Country)) +
geom_line(size = 1,alpha=0.4) +
geom_point(size = 1)+
#scale_y_continuous(sec.axis = sec_axis(~ ., breaks = d_ends)) + # Coloca numero de casos totales al final de la serie (lo quite por overplotting)
theme_ipsum()  +
labs(title="Número de casos confirmados de COVID-19 en paises\n de LATAM por día",
subtitle=paste0("Total en estos paises: ", as.character(sum(df$ConfirmedCases)), "\nFecha de corte: ", df$Date[nrow(df)]),
caption=caption_text,
x="",
y="") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
plot.subtitle = element_text(hjust = 1, size =11 ),
plot.caption = element_text(size = 11),
strip.text = element_text(size = 14),
panel.spacing.x = unit(3, "lines"),
text = element_text(family = "Arial Narrow"),
axis.text.x = element_text(size = 12, angle = 90, hjust = 1),
axis.text.y = element_text(size = 12))
# Usamos ggplotly para hacerlo interactivo
#p <- ggplotly(p)
ggsave(filename = paste0(path_img, "08_casos_acumulados_latam.png"),
width = 10, height = 8, dpi = 100)
View(df)
View(df)
# Paquetes utiles
library(ggplot2)
library(dplyr)
library(plotly)
library(hrbrthemes)
library(readr)
library(tidyverse)
library(lubridate)
#Variables auxiliares
path_img <-'~/github/Covid19_Mexico/imagenes/'
caption_text <- 'Fuente: Elaboración propia con datos de Data Repository by Johns Hopkins CSSE\n @Bcjg23 | @GutzCarlos | @czammar'
# Cargamos datos de serie de tiempo
# Fuente: 2019 Novel Coronavirus COVID-19 (2019-nCoV) Data Repository by Johns Hopkins CSSE
urlfile="https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"
df <-read_csv(url(urlfile))
# Datos para graficas
## Reordenamos los datos para las graficas
df <- df %>% select(-c(Lat,Long,`Province/State`)) %>% group_by(`Country/Region`) %>% summarise_all(funs(sum))
## Alargamos la tabla por Pais
df <-gather(df, `1/22/20`:`3/25/20`,key='Fecha',value=ConfirmedCases)
## Renombramos columna
df <- rename(df, Country=`Country/Region` )
## Transformamos la columna al formato de fecha adecuado
df <- df %>% mutate( date = as.Date(df$Fecha, format = "%m/%d/%Y"))
df$Date <-  mdy(df$Fecha)
## Paises para del comparativo
df <- df %>% filter(Country %in% c("Mexico","Colombia","Chile","Argentina","Brazil","Peru","Ecuador"))
## Filtro de fechas
df <- df %>% filter(Date>='2020-03-15')
## Etiquetas para el final de las series de tiempo
d_ends <- df %>% group_by(Country) %>% top_n(1, ConfirmedCases) %>% pull(ConfirmedCases)
##
fecha_actualizacion <- str_sub(max(df$ConfirmedCases), end = -1)
#
ggplot(df, aes(x = Date, y = ConfirmedCases,color = Country)) +
geom_line(size = 1,alpha=0.4) +
geom_point(size = 1)+
#scale_y_continuous(sec.axis = sec_axis(~ ., breaks = d_ends)) + # Coloca numero de casos totales al final de la serie (lo quite por overplotting)
theme_ipsum()  +
labs(title="Número de casos confirmados de COVID-19 en paises\n de LATAM por día",
subtitle=paste0("Total en estos paises: ", as.character(sum(df$ConfirmedCases)), "\nFecha de corte: ", df$Date[nrow(df)]),
caption=caption_text,
x="",
y="") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
plot.subtitle = element_text(hjust = 1, size =11 ),
plot.caption = element_text(size = 11),
strip.text = element_text(size = 14),
panel.spacing.x = unit(3, "lines"),
text = element_text(family = "Arial Narrow"),
axis.text.x = element_text(size = 12, angle = 90, hjust = 1),
axis.text.y = element_text(size = 12))
# Usamos ggplotly para hacerlo interactivo
#p <- ggplotly(p)
ggsave(filename = paste0(path_img, "08_casos_acumulados_latam.png"),
width = 10, height = 8, dpi = 100)
setwd("~/github/Covid19_Mexico")
path_in <- '~/github/Covid19_Mexico/data/'
path_out <-'~/github/Covid19_Mexico/output/'
path_img <-'~/github/Covid19_Mexico/imagenes/'
library(tidyverse)
library(ggplot2)
#library(dplyr)
library(hrbrthemes)
if(!require(forcats)) install.packages("forcats", repos = "http://cran.us.r-project.org")
# Confirmados por fecha a nivel estatal
confirmados <- read.csv('output/confirmados_20_03_2020.csv', encoding="UTF-8", stringsAsFactors=FALSE)
confirmados$fecha_de_corte <- as.Date(confirmados$fecha_de_corte, format = "%d/%m/%Y" )
confirmados$fecha_de_inicio_de_sintomas <- as.Date(confirmados$fecha_de_inicio_de_sintomas, format = "%d/%m/%Y" )
confirmados$fecha_de_llegada_a_mexico <- as.Date(confirmados$fecha_de_llegada_a_mexico, format = "%d/%m/%Y" )
confirmados_nacional <- confirmados %>% group_by(fecha_de_corte) %>% summarise(nuevos_casos = n())
confirmados_nacional <- confirmados_nacional %>% mutate(confirmados = cumsum(nuevos_casos))
fecha_actualizacion <- str_sub(max(confirmados_nacional$fecha_de_corte), end = -1)
###########  Casos Acumulados
ggplot(confirmados_nacional,
aes(x = fecha_de_corte,
y = confirmados,
label = confirmados)) +
geom_line(color="red") + geom_point(shape=21, color="gray", fill="#c0392b", size=6) +
geom_text(vjust = 0, nudge_y = 6) + scale_x_date(date_breaks = "1 day") +
theme_ipsum()  +
labs(title='Número de casos confirmados de COVID-19 en México',
subtitle=paste0("Fecha de corte: ", fecha_actualizacion),
caption='Elaboración propia con datos de la Secretaría de Salud',
x="",
y="") +
theme(plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size =15 ),
plot.caption = element_text(size = 12),
strip.text = element_text(size = 14),
panel.spacing.x = unit(3, "lines"),
text = element_text(family = "Arial Narrow"),
axis.text.x = element_text(size = 12, angle = 90, hjust = 1),
axis.text.y = element_text(size = 10))
ggsave(filename = paste0(path_img, "01_acumulados_", str_replace_all(fecha_actualizacion, "-", "_"), ".png"),
width = 10, height = 8, dpi = 100)
ggplot(confirmados_nacional,
aes(x = fecha_de_corte,
y = nuevos_casos,
label = nuevos_casos)) +
geom_line(color="red") + geom_point(shape=21, color="gray", fill="#c0392b", size=6) +
geom_text(vjust = 0, nudge_y = 1.5) + scale_x_date(date_breaks = "1 day") +
theme_ipsum()  +
labs(title="Número de *nuevos* casos confirmados de COVID-19\n en México por día",
subtitle=paste0("Fecha de corte: ", fecha_actualizacion,"\nTotal: ", as.character(sum(confirmados_nacional$nuevos_casos))),
caption="Elaboración propia con datos de la Secretaría de Salud",
x="",
y="") +
theme(plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size =15 ),
plot.caption = element_text(size = 12),
strip.text = element_text(size = 14),
panel.spacing.x = unit(3, "lines"),
text = element_text(family = "Arial Narrow"),
axis.text.x = element_text(size = 12, angle = 90, hjust = 1),
axis.text.y = element_text(size = 10))
ggsave(filename = paste0(path_img, "02_nuevos_", str_replace_all(fecha_actualizacion, "-", "_"), ".png"),
width = 10, height = 8, dpi = 100)
confirmados_sexo <- round(prop.table(table(confirmados$sexo))*100,2)
confirmados_sexo <- as.data.frame(cbind(c('F','M'), confirmados_sexo))
colnames(confirmados_sexo) <- c('categoria', 'valor')
confirmados_sexo$valor <- as.numeric(as.character(droplevels(confirmados_sexo$valor)))
# Compute label position
confirmados_sexo$label <- paste0(confirmados_sexo$categoria, "\n", confirmados_sexo$valor,"%")
# Compute the bottom of each rectangle
confirmados_sexo$ymax <- cumsum(confirmados_sexo$valor)
# Compute the bottom of each rectangle
confirmados_sexo$ymin <- c(0, head(confirmados_sexo$ymax, n=-1))
# Compute label position
confirmados_sexo$label_position <- (confirmados_sexo$ymax + confirmados_sexo$ymin) / 2
ggplot(confirmados_sexo, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=2, fill=categoria)) +
geom_rect() +
geom_text(x=2, aes(y=label_position, label=label, color=categoria), size=6) +
scale_fill_manual(values = c("red", "steelblue")) +
scale_color_manual(values = c("black", "black")) +
coord_polar(theta="y") +
xlim(c(-1, 4)) +
theme_void() +
labs(title="Distribucion por sexo",
subtitle=paste0("Fecha de corte: ", fecha_actualizacion,"\nTotal: ", as.character(sum(confirmados_nacional$nuevos_casos))),
caption="Elaboración propia con datos de la Secretaría de Salud",
x="",
y="") +
theme(plot.title = element_text(size = 20, face = "bold"),
plot.subtitle = element_text(size =15 ),
plot.caption = element_text(size = 12),
strip.text = element_text(size = 14),
panel.spacing.x = unit(3, "lines"),
text = element_text(family = "Arial Narrow"),
#axis.text.x = element_text(size = 12, angle = 90, hjust = 1),
#axis.text.y = element_text(size = 10)
legend.position = "none")
